{"ast":null,"code":"import _defineProperty from \"/Users/cindykathleen/MentorCrowd/mentorcrowdreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/cindykathleen/MentorCrowd/mentorcrowdreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cindykathleen/MentorCrowd/mentorcrowdreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cindykathleen/MentorCrowd/mentorcrowdreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cindykathleen/MentorCrowd/mentorcrowdreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cindykathleen/MentorCrowd/mentorcrowdreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/cindykathleen/MentorCrowd/mentorcrowdreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/cindykathleen/MentorCrowd/mentorcrowdreact/src/components/add-credentials/AddExperience.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addExperience } from '../../actions/profileActions';\n\nvar AddExperience =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddExperience, _Component);\n\n  function AddExperience(props) {\n    var _this;\n\n    _classCallCheck(this, AddExperience);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddExperience).call(this, props));\n    _this.state = {\n      company: '',\n      title: '',\n      location: '',\n      from: '',\n      to: '',\n      current: false,\n      description: '',\n      errors: {},\n      disabled: false\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCheck = _this.onCheck.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddExperience, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var expData = {\n        company: this.state.company,\n        title: this.state.title,\n        location: this.state.location,\n        from: this.state.from,\n        to: this.state.to,\n        current: this.state.current,\n        descrption: this.state.description\n      };\n      this.props.addExperience(expData, this.props.history);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onCheck\",\n    value: function onCheck(e) {\n      this.setState({\n        disabled: !this.state.disabled,\n        current: !this.state.current\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        className: \"add-experience\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/dashboard\",\n        className: \"btn btn-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Go Back\"), React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Add Experience\"), React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Add any job or position that you have had in the past or current\"), React.createElement(\"small\", {\n        className: \"d-block pb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"* = required fields\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(TextFieldGroup, {\n        placeholder: \"* Company\",\n        name: \"company\",\n        value: this.state.company,\n        onChange: this.onChange,\n        error: errors.company,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"* Job Title\",\n        name: \"title\",\n        value: this.state.title,\n        onChange: this.onChange,\n        error: errors.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"From Date\"), React.createElement(TextFieldGroup, {\n        name: \"from\",\n        type: \"date\",\n        value: this.state.from,\n        onChange: this.onChange,\n        error: errors.from,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"To Date\"), React.createElement(TextFieldGroup, {\n        name: \"to\",\n        type: \"date\",\n        value: this.state.to,\n        onChange: this.onChange,\n        error: errors.to,\n        disabled: this.state.diabled ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-check mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        name: \"current\",\n        value: this.state.current,\n        checked: this.state.current,\n        onChange: this.onCheck,\n        id: \"current\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"current\",\n        className: \"form-check label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Current Job\")), React.createElement(TextAreaFieldGroup, {\n        placeholder: \"Job Description\",\n        name: \"description\",\n        value: this.state.description,\n        onChange: this.onChange,\n        error: errors.description,\n        info: \"Tell us about the position\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn btn-info btn-block mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return AddExperience;\n}(Component);\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addExperience: addExperience\n})(withRouter(AddExperience));","map":{"version":3,"sources":["/Users/cindykathleen/MentorCrowd/mentorcrowdreact/src/components/add-credentials/AddExperience.js"],"names":["React","Component","Link","withRouter","TextAreaFieldGroup","TextFieldGroup","connect","PropTypes","addExperience","AddExperience","props","state","company","title","location","from","to","current","description","errors","disabled","onChange","bind","onSubmit","onCheck","nextProps","setState","e","preventDefault","expData","descrption","history","target","name","value","diabled","propTypes","func","isRequired","profile","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom';\nimport  TextAreaFieldGroup  from '../common/TextAreaFieldGroup';\nimport  TextFieldGroup  from '../common/TextFieldGroup';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addExperience } from '../../actions/profileActions';\n\nclass AddExperience extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            company: '',\n            title: '',\n            location: '',\n            from: '',\n            to: '',\n            current: false,\n            description: '',\n            errors: {},\n            disabled: false\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onCheck = this.onCheck.bind(this);\n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n    onSubmit(e){\n        e.preventDefault();\n        const expData = {\n            company: this.state.company,\n            title: this.state.title,\n            location: this.state.location,\n            from: this.state.from,\n            to: this.state.to,\n            current: this.state.current,\n            descrption: this.state.description\n        }\n\n        this.props.addExperience(expData, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onCheck(e) {\n        this.setState({\n          disabled: !this.state.disabled,\n          current: !this.state.current\n        });\n    }\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-experience\">\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                    <Link to=\"/dashboard\" className=\"btn btn-light\">Go Back</Link>\n                    <h1 className=\"display-4 text-center\">Add Experience</h1>\n                    <p className=\"lead text-center\">Add any job or position that you have had in the past or current</p>\n                    <small className=\"d-block pb-3\">* = required fields</small>\n                    <form onSubmit={this.onSubmit}>\n                        <TextFieldGroup \n                            placeholder=\"* Company\"\n                            name=\"company\"\n                            value={this.state.company}\n                            onChange={this.onChange}\n                            error={errors.company}\n                        />\n                        <TextFieldGroup \n                            placeholder=\"* Job Title\"\n                            name=\"title\"\n                            value={this.state.title}\n                            onChange={this.onChange}\n                            error={errors.title}\n                        />\n                        <h6>From Date</h6>\n                        <TextFieldGroup \n                            name=\"from\"\n                            type=\"date\"\n                            value={this.state.from}\n                            onChange={this.onChange}\n                            error={errors.from}\n                        />\n                        <h6>To Date</h6>\n                        <TextFieldGroup \n                            name=\"to\"\n                            type=\"date\"\n                            value={this.state.to}\n                            onChange={this.onChange}\n                            error={errors.to}\n                            disabled={this.state.diabled ? 'disabled' : ''}\n                        />\n                        <div className=\"form-check mb-4\">\n                            <input \n                                type=\"checkbox\"\n                                className=\"form-check-input\"\n                                name=\"current\"\n                                value={this.state.current}\n                                checked={this.state.current}\n                                onChange={this.onCheck}\n                                id=\"current\"\n                            />\n                            <label htmlFor=\"current\" className=\"form-check label\">\n                                Current Job\n                            </label>\n                        </div>\n                        <TextAreaFieldGroup \n                            placeholder=\"Job Description\"\n                            name=\"description\"\n                            value={this.state.description}\n                            onChange={this.onChange}\n                            error={errors.description}\n                            info=\"Tell us about the position\"\n                        />\n                        <input type=\"submit\" value=\"Submit\" className=\"btn btn-info btn-block mt-4\"/>\n                    </form>\n                </div>\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, { addExperience })(withRouter(AddExperience));"]},"metadata":{},"sourceType":"module"}